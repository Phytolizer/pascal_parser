/*
  Generated by Make DParser Version 1.31.4ab9d43046e5d22ffb365ec5f5184a7cfee09b30
  Available at https://github.com/jplevyak/dparser
*/

#line 1 "freepascal.g"

#include "nodes.hpp"


#line 12 "freepascal.g.d_parser.cpp"
#include "dparse.hpp"

D_Reduction d_reduction_0_pascal = {1, 0, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_1_pascal = {1, 1, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_2_pascal = {3, 2, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
#line 28 "freepascal.g"
int d_final_reduction_code_2_3_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::HintDirective;
        (D_PN(_ps, _offset)->user).value.hint_directive = new Pascal::HintDirective{ .type = Pascal::HintDirective::Type::Experimental };
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 24 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_3_pascal = {1, 2, NULL, d_final_reduction_code_2_3_pascal, 0, 0, 0, 0, 0, 0, NULL};
#line 33 "freepascal.g"
int d_final_reduction_code_2_4_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::HintDirective;
        (D_PN(_ps, _offset)->user).value.hint_directive = new Pascal::HintDirective{ .type = Pascal::HintDirective::Type::Platform };
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 32 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_4_pascal = {1, 2, NULL, d_final_reduction_code_2_4_pascal, 0, 0, 0, 0, 0, 0, NULL};
#line 38 "freepascal.g"
int d_final_reduction_code_2_5_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::HintDirective;
        (D_PN(_ps, _offset)->user).value.hint_directive = new Pascal::HintDirective{ .type = Pascal::HintDirective::Type::Unimplemented };
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 40 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_5_pascal = {1, 2, NULL, d_final_reduction_code_2_5_pascal, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_6_pascal = {1, 3, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_7_pascal = {0, 3, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 22 "freepascal.g"
int d_final_reduction_code_4_8_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
                (D_PN(_ps, _offset)->user).value.hint_directive->message = *(D_PN(_children[1], _offset)->user).value.string_constant;
                delete (D_PN(_children[1], _offset)->user).value.string_constant;
              (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 50 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_8_pascal = {1, 4, NULL, d_final_reduction_code_4_8_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 16 "freepascal.g"
int d_final_reduction_code_5_9_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::HintDirective;
        (D_PN(_ps, _offset)->user).value.hint_directive = new Pascal::HintDirective{ .type = Pascal::HintDirective::Type::Deprecated };
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 58 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_9_pascal = {0, 5, NULL, d_final_reduction_code_5_9_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 48 "freepascal.g"
int d_final_reduction_code_6_10_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::StringConstant;
        (D_PN(_ps, _offset)->user).value.string_constant = new std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end};
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 66 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_10_pascal = {1, 6, NULL, d_final_reduction_code_6_10_pascal, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_11_pascal = {1, 7, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_12_pascal = {1, 8, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_13_pascal = {1, 9, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_14_pascal = {1, 10, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
#line 66 "freepascal.g"
int d_final_reduction_code_11_15_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::UnsignedInteger;
        (D_PN(_ps, _offset)->user).value.unsigned_integer = new Pascal::UnsignedInteger{ .type = Pascal::UnsignedInteger::Type::Decimal };
        (D_PN(_ps, _offset)->user).value.unsigned_integer->value = std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end};
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 79 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_15_pascal = {1, 11, NULL, d_final_reduction_code_11_15_pascal, 0, 0, 0, 0, 0, 0, NULL};
#line 73 "freepascal.g"
int d_final_reduction_code_11_16_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::UnsignedInteger;
        (D_PN(_ps, _offset)->user).value.unsigned_integer = new Pascal::UnsignedInteger{ .type = Pascal::UnsignedInteger::Type::Hexadecimal };
        (D_PN(_ps, _offset)->user).value.unsigned_integer->value = std::string{(*(D_PN(_children[1], _offset))).start_loc.s, (*(D_PN(_children[1], _offset))).end};
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 88 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_16_pascal = {2, 11, NULL, d_final_reduction_code_11_16_pascal, 0, 0, 0, 0, 0, 0, NULL};
#line 80 "freepascal.g"
int d_final_reduction_code_11_17_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::UnsignedInteger;
        (D_PN(_ps, _offset)->user).value.unsigned_integer = new Pascal::UnsignedInteger{ .type = Pascal::UnsignedInteger::Type::Octal };
        (D_PN(_ps, _offset)->user).value.unsigned_integer->value = std::string{(*(D_PN(_children[1], _offset))).start_loc.s, (*(D_PN(_children[1], _offset))).end};
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 97 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_17_pascal = {2, 11, NULL, d_final_reduction_code_11_17_pascal, 0, 0, 0, 0, 0, 0, NULL};
#line 87 "freepascal.g"
int d_final_reduction_code_11_18_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::UnsignedInteger;
        (D_PN(_ps, _offset)->user).value.unsigned_integer = new Pascal::UnsignedInteger{ .type = Pascal::UnsignedInteger::Type::Binary };
        (D_PN(_ps, _offset)->user).value.unsigned_integer->value = std::string{(*(D_PN(_children[1], _offset))).start_loc.s, (*(D_PN(_children[1], _offset))).end};
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 106 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_18_pascal = {2, 11, NULL, d_final_reduction_code_11_18_pascal, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_19_pascal = {1, 12, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_20_pascal = {4, 13, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_21_pascal = {1, 14, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_22_pascal = {0, 14, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 109 "freepascal.g"
int d_final_reduction_code_15_23_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            (D_PN(_ps, _offset)->user).value.unsigned_real->scale_factor = *(D_PN(_children[1], _offset)->user).value.scale_factor;
            delete (D_PN(_children[1], _offset)->user).value.scale_factor;
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 118 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_23_pascal = {1, 15, NULL, d_final_reduction_code_15_23_pascal, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_24_pascal = {1, 16, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_25_pascal = {0, 16, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 103 "freepascal.g"
int d_final_reduction_code_17_26_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            (D_PN(_ps, _offset)->user).value.unsigned_real->decimal_part = std::string{(*(D_PN(_children[1], _offset))).start_loc.s, (*(D_PN(_children[1], _offset))).end};
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 127 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_26_pascal = {2, 17, NULL, d_final_reduction_code_17_26_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 97 "freepascal.g"
int d_final_reduction_code_18_27_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::UnsignedReal;
        (D_PN(_ps, _offset)->user).value.unsigned_real = new Pascal::UnsignedReal{ .value = std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end} };
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 135 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_27_pascal = {0, 18, NULL, d_final_reduction_code_18_27_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 128 "freepascal.g"
int d_final_reduction_code_19_28_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).value.scale_factor->exponent = std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end};
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 142 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_28_pascal = {4, 19, NULL, d_final_reduction_code_19_28_pascal, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_29_pascal = {1, 20, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_30_pascal = {0, 20, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 123 "freepascal.g"
int d_final_reduction_code_21_31_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            (D_PN(_ps, _offset)->user).value.scale_factor->sign = std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end};
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 151 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_31_pascal = {1, 21, NULL, d_final_reduction_code_21_31_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 117 "freepascal.g"
int d_final_reduction_code_22_32_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::ScaleFactor;
        (D_PN(_ps, _offset)->user).value.scale_factor = new Pascal::ScaleFactor{};
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 159 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_32_pascal = {0, 22, NULL, d_final_reduction_code_22_32_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 134 "freepascal.g"
int d_final_reduction_code_23_33_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::UnsignedNumber;
        (D_PN(_ps, _offset)->user).value.unsigned_number = new Pascal::UnsignedNumber{ .type = Pascal::UnsignedNumber::Type::UnsignedReal };
        (D_PN(_ps, _offset)->user).value.unsigned_number->value.unsigned_real = (D_PN(_children[1], _offset)->user).value.unsigned_real;
        delete (D_PN(_children[1], _offset)->user).value.unsigned_real;
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 169 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_33_pascal = {1, 23, NULL, d_final_reduction_code_23_33_pascal, 0, 0, 0, 0, 0, 0, NULL};
#line 142 "freepascal.g"
int d_final_reduction_code_23_34_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::UnsignedNumber;
        (D_PN(_ps, _offset)->user).value.unsigned_number = new Pascal::UnsignedNumber{ .type = Pascal::UnsignedNumber::Type::UnsignedInteger };
        (D_PN(_ps, _offset)->user).value.unsigned_number->value.unsigned_integer = (D_PN(_children[1], _offset)->user).value.unsigned_integer;
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 178 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_34_pascal = {1, 23, NULL, d_final_reduction_code_23_34_pascal, 0, 0, 0, 0, 0, 0, NULL};
#line 158 "freepascal.g"
int d_final_reduction_code_24_35_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::SignedNumber;
        if ((_n_children) == 1) {
            (D_PN(_ps, _offset)->user).value.signed_number = new Pascal::SignedNumber{ .sign = {} };
        }
        (D_PN(_ps, _offset)->user).value.signed_number->number = *(D_PN(_children[1], _offset)->user).value.unsigned_number;
        delete (D_PN(_children[1], _offset)->user).value.unsigned_number;
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 190 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_35_pascal = {2, 24, NULL, d_final_reduction_code_24_35_pascal, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_36_pascal = {1, 25, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_37_pascal = {0, 25, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 152 "freepascal.g"
int d_final_reduction_code_26_38_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::SignedNumber;
            (D_PN(_ps, _offset)->user).value.signed_number = new Pascal::SignedNumber{ .sign = std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end} };
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 200 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_38_pascal = {1, 26, NULL, d_final_reduction_code_26_38_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 172 "freepascal.g"
int d_final_reduction_code_27_39_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::Label;
        (D_PN(_ps, _offset)->user).value.label = new Pascal::Label{ .type = Pascal::Label::Type::DigitSequence };
        (D_PN(_ps, _offset)->user).value.label->value.digit_sequence = new std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end};
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 209 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_39_pascal = {1, 27, NULL, d_final_reduction_code_27_39_pascal, 0, 0, 0, 0, 0, 0, NULL};
#line 179 "freepascal.g"
int d_final_reduction_code_27_40_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::Label;
        (D_PN(_ps, _offset)->user).value.label = new Pascal::Label{ .type = Pascal::Label::Type::Identifier };
        (D_PN(_ps, _offset)->user).value.label->value.identifier = new std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end};
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 218 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_40_pascal = {1, 27, NULL, d_final_reduction_code_27_40_pascal, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_41_pascal = {2, 28, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_42_pascal = {2, 29, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_43_pascal = {0, 29, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 213 "freepascal.g"
int d_final_reduction_code_30_44_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            (D_PN(_ps, _offset)->user).value.character_string->elements.emplace_back(Pascal::CharacterStringElement{
                .type = Pascal::CharacterStringElement::Type::QuotedString,
                .value = std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end},
            });
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 231 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_44_pascal = {1, 30, NULL, d_final_reduction_code_30_44_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 221 "freepascal.g"
int d_final_reduction_code_30_45_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            (D_PN(_ps, _offset)->user).value.character_string->elements.emplace_back(Pascal::CharacterStringElement{
                .type = Pascal::CharacterStringElement::Type::ControlString,
                .value = std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end},
            });
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 241 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_45_pascal = {1, 30, NULL, d_final_reduction_code_30_45_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 192 "freepascal.g"
int d_final_reduction_code_31_46_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::CharacterString;
            (D_PN(_ps, _offset)->user).value.character_string = new Pascal::CharacterString{};
            (D_PN(_ps, _offset)->user).value.character_string->elements.emplace_back(Pascal::CharacterStringElement{
                .type = Pascal::CharacterStringElement::Type::QuotedString,
                .value = std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end},
            });
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 253 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_46_pascal = {1, 31, NULL, d_final_reduction_code_31_46_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 202 "freepascal.g"
int d_final_reduction_code_31_47_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::CharacterString;
            (D_PN(_ps, _offset)->user).value.character_string = new Pascal::CharacterString{};
            (D_PN(_ps, _offset)->user).value.character_string->elements.emplace_back(Pascal::CharacterStringElement{
                .type = Pascal::CharacterStringElement::Type::ControlString,
                .value = std::string{(*(D_PN(_ps, _offset))).start_loc.s, (*(D_PN(_ps, _offset))).end},
            });
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 265 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_47_pascal = {1, 31, NULL, d_final_reduction_code_31_47_pascal, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_48_pascal = {1, 32, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_49_pascal = {1, 33, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_50_pascal = {2, 34, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_51_pascal = {1, 34, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 237 "freepascal.g"
int d_final_reduction_code_35_52_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            delete (D_PN(_children[2], _offset)->user).value.unsigned_integer;
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 276 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_52_pascal = {2, 35, NULL, d_final_reduction_code_35_52_pascal, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_53_pascal = {3, 36, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
#line 265 "freepascal.g"
int d_final_reduction_code_36_54_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::ConstantDeclaration;
        (D_PN(_ps, _offset)->user).value.constant_declaration = new Pascal::ConstantDeclaration {
            .name = std::string{(*(D_PN(_children[1], _offset))).start_loc.s, (*(D_PN(_children[1], _offset))).end},
            .expression = *(D_PN(_children[3], _offset)->user).value.expression,
            .hint_directives = *(D_PN(_children[4], _offset)->user).value.hint_directives,
        };
        delete (D_PN(_children[3], _offset)->user).value.expression;
        delete (D_PN(_children[4], _offset)->user).value.hint_directives;
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 291 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_54_pascal = {5, 36, NULL, d_final_reduction_code_36_54_pascal, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_55_pascal = {2, 37, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_56_pascal = {0, 37, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 257 "freepascal.g"
int d_final_reduction_code_38_57_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            (D_PN(_ps, _offset)->user).value.constant_declarations->values.emplace_back(*(D_PN(_children[1], _offset)->user).value.constant_declaration);
            delete (D_PN(_children[1], _offset)->user).value.constant_declaration;
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 301 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_57_pascal = {1, 38, NULL, d_final_reduction_code_38_57_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 248 "freepascal.g"
int d_final_reduction_code_39_58_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::ConstantDeclarations;
        (D_PN(_ps, _offset)->user).value.constant_declarations = new Pascal::ConstantDeclarations {
            .values = std::vector<Pascal::ConstantDeclaration>{*(D_PN(_children[1], _offset)->user).value.constant_declaration},
        };
        delete (D_PN(_children[1], _offset)->user).value.constant_declaration;
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 312 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_58_pascal = {0, 39, NULL, d_final_reduction_code_39_58_pascal, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_59_pascal = {1, 40, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_60_pascal = {3, 41, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_61_pascal = {2, 42, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_62_pascal = {0, 42, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 290 "freepascal.g"
int d_final_reduction_code_43_63_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
            (D_PN(_ps, _offset)->user).value.hint_directives->values.emplace_back(*(D_PN(_children[1], _offset)->user).value.hint_directive);
            delete (D_PN(_children[1], _offset)->user).value.hint_directive;
          (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 324 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_63_pascal = {1, 43, NULL, d_final_reduction_code_43_63_pascal, 0, 0, 0, 0, -1, 0, NULL};
#line 281 "freepascal.g"
int d_final_reduction_code_44_64_pascal(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) { 
        (D_PN(_ps, _offset)->user).type = Pascal::ParseNode::Type::HintDirectives;
        (D_PN(_ps, _offset)->user).value.hint_directives = new Pascal::HintDirectives {
            .values = std::vector<Pascal::HintDirective>{*(D_PN(_children[1], _offset)->user).value.hint_directive},
        };
        delete (D_PN(_children[1], _offset)->user).value.hint_directive;
      (void)_children; (void)_n_children;  (void)_parser; return 0;}

#line 335 "freepascal.g.d_parser.cpp"
D_Reduction d_reduction_64_pascal = {0, 44, NULL, d_final_reduction_code_44_64_pascal, 0, 0, 0, 0, -1, 0, NULL};
D_Shift d_shift_0_pascal = {45, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_1_pascal = {46, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_2_pascal = {47, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_3_pascal = {48, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_4_pascal = {49, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_5_pascal = {50, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_6_pascal = {51, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_7_pascal = {52, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_8_pascal = {53, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_9_pascal = {54, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_10_pascal = {55, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_11_pascal = {56, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_12_pascal = {57, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_13_pascal = {58, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_14_pascal = {59, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_15_pascal = {60, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_16_pascal = {61, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_17_pascal = {62, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_18_pascal = {63, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_19_pascal = {64, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_20_pascal = {65, 0, 0, 0, 0, 0, NULL};

D_Shift * d_accepts_diff_0_0_pascal[] = {0};
D_Shift ** d_accepts_diff_0_pascal[] = {
d_accepts_diff_0_0_pascal
};

unsigned char d_scanner_0_0_0_pascal[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};

unsigned char d_accepts_diff_0_0_0_pascal[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};

unsigned char d_scanner_0_0_1_pascal[SCANNER_BLOCK_SIZE] = {
0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 2, 
0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 
};

unsigned char d_scanner_0_1_0_pascal[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 
};

D_Shift * d_shift_0_1_pascal[] = {&d_shift_0_pascal,NULL};

SB_uint8 d_scanner_0_pascal[2] = {
{NULL, {d_scanner_0_0_0_pascal, d_scanner_0_0_1_pascal
 , d_scanner_0_0_0_pascal, d_scanner_0_0_0_pascal}},
{d_shift_0_1_pascal, {d_scanner_0_1_0_pascal, d_scanner_0_0_1_pascal
 , d_scanner_0_0_0_pascal, d_scanner_0_0_0_pascal}}
};

SB_trans_uint8 d_transition_0_pascal[2] = {
{{d_accepts_diff_0_0_0_pascal, d_accepts_diff_0_0_0_pascal
 , d_accepts_diff_0_0_0_pascal, d_accepts_diff_0_0_0_pascal}},
{{d_accepts_diff_0_0_0_pascal, d_accepts_diff_0_0_0_pascal
 , d_accepts_diff_0_0_0_pascal, d_accepts_diff_0_0_0_pascal}}
};

unsigned char d_goto_valid_0_pascal[] = {
0x2,0x0,0x0,0x0,0x0,0x20,0x0,0x0,0x0};
D_Reduction * d_reductions_1_pascal[] = {&d_reduction_1_pascal};
unsigned short d_gotos_pascal[45] = {
3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,2};


D_State d_states_pascal[] = {
{d_goto_valid_0_pascal, 1, {0, NULL}, {0, NULL}, {0, NULL}, 1, NULL, (void*)d_scanner_0_pascal, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_0_pascal, d_accepts_diff_0_pascal, -1},
{NULL, -2147483647, {1, d_reductions_1_pascal}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{NULL, -2147483647, {0, NULL}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 1, D_SCAN_ALL, NULL, NULL, -1}
};

D_Symbol d_symbols_pascal[] = {
{D_SYMBOL_EBNF, "0 Start", 7, -1},
{D_SYMBOL_NTERM, "identifier", 10, -1},
{D_SYMBOL_NTERM, "hint_directive", 14, -1},
{D_SYMBOL_INTERNAL, "hint_directive__5", 17, -1},
{D_SYMBOL_EBNF, "hint_directive__4", 17, -1},
{D_SYMBOL_EBNF, " _synthetic__3", 14, -1},
{D_SYMBOL_NTERM, "string_constant", 15, -1},
{D_SYMBOL_NTERM, "hex_digit_sequence", 18, -1},
{D_SYMBOL_NTERM, "octal_digit_sequence", 20, -1},
{D_SYMBOL_NTERM, "binary_digit_sequence", 21, -1},
{D_SYMBOL_NTERM, "digit_sequence", 14, -1},
{D_SYMBOL_NTERM, "unsigned_integer", 16, -1},
{D_SYMBOL_NTERM, "sign", 4, -1},
{D_SYMBOL_NTERM, "unsigned_real", 13, -1},
{D_SYMBOL_INTERNAL, "unsigned_real__18", 17, -1},
{D_SYMBOL_EBNF, "unsigned_real__17", 17, -1},
{D_SYMBOL_INTERNAL, "unsigned_real__16", 17, -1},
{D_SYMBOL_EBNF, "unsigned_real__15", 17, -1},
{D_SYMBOL_EBNF, " _synthetic__14", 15, -1},
{D_SYMBOL_NTERM, "scale_factor", 12, -1},
{D_SYMBOL_INTERNAL, "scale_factor__22", 16, -1},
{D_SYMBOL_EBNF, "scale_factor__21", 16, -1},
{D_SYMBOL_EBNF, " _synthetic__20", 15, -1},
{D_SYMBOL_NTERM, "unsigned_number", 15, -1},
{D_SYMBOL_NTERM, "signed_number", 13, -1},
{D_SYMBOL_INTERNAL, "signed_number__26", 17, -1},
{D_SYMBOL_EBNF, "signed_number__25", 17, -1},
{D_SYMBOL_NTERM, "label", 5, -1},
{D_SYMBOL_NTERM, "character_string", 16, -1},
{D_SYMBOL_INTERNAL, "character_string__31", 20, -1},
{D_SYMBOL_EBNF, "character_string__30", 20, -1},
{D_SYMBOL_EBNF, "character_string__29", 20, -1},
{D_SYMBOL_NTERM, "quoted_string", 13, -1},
{D_SYMBOL_NTERM, "control_string", 14, -1},
{D_SYMBOL_INTERNAL, "control_string__35", 18, -1},
{D_SYMBOL_EBNF, "control_string__34", 18, -1},
{D_SYMBOL_NTERM, "constant_declaration", 20, -1},
{D_SYMBOL_INTERNAL, "constant_declaration__39", 24, -1},
{D_SYMBOL_EBNF, "constant_declaration__38", 24, -1},
{D_SYMBOL_EBNF, " _synthetic__37", 15, -1},
{D_SYMBOL_NTERM, "expression", 10, -1},
{D_SYMBOL_NTERM, "hint_directives", 15, -1},
{D_SYMBOL_INTERNAL, "hint_directives__44", 19, -1},
{D_SYMBOL_EBNF, "hint_directives__43", 19, -1},
{D_SYMBOL_EBNF, " _synthetic__42", 15, -1},
{D_SYMBOL_REGEX, "[a-zA-Z_][a-zA-Z0-9_]*", 22, -1},
{D_SYMBOL_STRING, "deprecated", 10, -1},
{D_SYMBOL_STRING, "experimental", 12, -1},
{D_SYMBOL_STRING, "platform", 8, -1},
{D_SYMBOL_STRING, "unimplemented", 13, -1},
{D_SYMBOL_REGEX, "'([^']|'')*'", 12, -1},
{D_SYMBOL_REGEX, "[0-9a-fA-F]+", 12, -1},
{D_SYMBOL_REGEX, "[0-7]+", 6, -1},
{D_SYMBOL_REGEX, "[01]+", 5, -1},
{D_SYMBOL_REGEX, "[0-9]+", 6, -1},
{D_SYMBOL_STRING, "$", 1, -1},
{D_SYMBOL_STRING, "&", 1, -1},
{D_SYMBOL_STRING, "%", 1, -1},
{D_SYMBOL_REGEX, "[+-]", 4, -1},
{D_SYMBOL_STRING, ".", 1, -1},
{D_SYMBOL_REGEX, "[eE]", 4, -1},
{D_SYMBOL_REGEX, "'([^']|'')*'", 12, -1},
{D_SYMBOL_STRING, "#", 1, -1},
{D_SYMBOL_STRING, "=", 1, -1},
{D_SYMBOL_STRING, ";", 1, -1},
{D_SYMBOL_STRING, "TODO", 4, -1},
};

D_ParserTables parser_tables_pascal = {
3, d_states_pascal, d_gotos_pascal, 0, 66, d_symbols_pascal, NULL, 0, NULL, 1};
